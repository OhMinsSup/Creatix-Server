language: node_js
node_js:
  - "10.14" # node_js에 버전 10.14.1

# Git 커밋을 한 내용중 수신 허용 목록을
# 사용하여 분기를 포함하거나 차단 목록을 사용하여 분기를 제외하십시오.
branches:
  # safelist
  only:
    - master

# Travis CI는 자주 변경되지 않는 컨텐츠를 캐시하여 빌드 프로세스의 속도를 높일 수 있습니다.
# 캐싱 기능을 사용하려면 저장소 설정에서 Build Bushed Branch를 ON으로 설정하십시오.
cache:
  directories:
    - "node_modules"

script:
  - npm test

before_deploy:
  # 현재 위치의 모든 파일을 creatix-server이름으로 압축(zip)
  - zip -r creatix-server
  # deploy라는 디렉토리를 Travis CI가 실행중인 위치에서 생성
  - mkdir -p deploy
  # creatix-server.zip 파일을 deploy/creatix-server.zip로 이동
  - mv creatix-server.zip deploy/creatix-server.zip

deploy:
  - provider: s3 # AWS S3를 의미
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: veloss-creatix-api-deploy # S3에 생성한 버킷
    region: ap-northeast-2
    skip_cleanup: true 
    local_dir: deploy # deploy 디렉터리에 있는 파일을 s3로 업로드 하겠다는 의미
    wait-until-deployed: true
    on: &1 # 중복 작업
      repo: OhMinsSup/creatix-server #Github 주소
      branch: master
#  - provider: codedeploy # AWS CodeDeploy를 의미
#    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
#    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
#    bucket: veloss-creatix-api-deploy # S3에 생성한 버킷
#    key: creatix-server.zip # 해당 버킷에 저장되어 있는 파일 이름
#    bundle_type: zip # 버킷에 저장되어 있는 파일의 확장자
#    application: creatix-server-api-code-deploy-service # AWS 배포 애플리케이션
#    deployment_group: creatix-server-api-group # AWS 배포 애플리케이션에 만들어져 있는 배포 그룹
#    region: ap-northeast-2
#    wait-until-deployed: true
#    on: *1
#      repo: OhMinsSup/creatix-server #Github 주소
#      branch: master


# 빌드 성공및 실패에 대한 알림을 받을 이메일
notifications:
  email:
    recipients:
      - mins5190@gmail.com